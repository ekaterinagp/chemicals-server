{"version":3,"sources":["logo.svg","components/charts/ChartJobs.js","components/StartPage.js","components/pageComponents/Header.js","components/charts/ChartChemicalsDelivered.js","components/charts/ChartChemicalsDispatched.js","components/Chemicals.js","components/charts/ChartWarehouse.js","components/Warehouses.js","components/Statistic.js","components/TabStyle.js","components/Datepicker/context/datepickerContext.js","components/Datepicker/Day.js","components/Datepicker/utils/getColor.js","components/Datepicker/Month.js","components/Datepicker/NavButton.js","components/Datepicker/Datepicker.js","components/Accordion.js","components/Search.js","components/pageComponents/Aside.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ChartJobs","props","useState","chartState","console","log","useEffect","chartConfig","type","data","labels","datasets","label","dates","borderWidth","pointStyle","pointRadius","pointBackgroundColor","options","scales","xAxes","time","unit","stepSize","displayFormat","tooltipFormat","ticks","major","enabled","fontStyle","fontSize","yAxes","beginAtZero","chartContainer","useRef","chartInstance","setChartInstance","datasetIndex","newData","config","update","current","newChartInstance","Chartjs","ref","StartPage","value","selectLabels","result","setResult","alerts","setAlerts","getAlerts","a","axios","get","siteStock","forEach","one","totalA","text","site","getJobs","jobs","response","allJobs","convertData","convertedArray","map","job","date","substring","length","permittedValues","sort","randomArray","addNumber","Math","floor","random","counts","x","Object","entries","key","push","t","y","array","b","sortByKey","slice","setJobDone","jobsDone","className","onChange","e","selectValue","currentTarget","Header","Date","toLocaleString","name","user","setDate","timerID","setInterval","clearInterval","ChartChemicalsDelivered","total","values","pop","letters","keys","backgroundColor","borderColor","legend","display","position","fontColor","title","layout","padding","left","right","top","bottom","updateDataset","ChartChemicalsDispatched","Chemicals","loading","setLoading","selectLabelsDelivered","deliveryForChart","setDeliveryForChart","getAllDelivery","allDelivery","getDeliveryByType","deliveryByType","setDeliveredByTypes","dispatchForChart","setDispatchForChart","getAllDispatch","allDispatch","getDispatchByType","dispatch","setDispatchedByTypes","dispatchedByTypes","deliveredByTypes","selectedValue","desc","A","B","C","constructor","defaultValue","ChartWarehouse","warehouse","Warehouses","isLoading","data1","setData1","data2","setData2","data3","setData3","data4","setData4","data5","setData5","data6","setData6","data7","setData7","data8","setData8","data9","setData9","data10","setData10","getDataByWarehouse","stock1","stock2","stock3","stock4","stock5","stock6","stock7","stock8","stock9","stock10","checkForNull","object","Statistic","audit","setAudit","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","initialState","setInitialState","getAuditData","list","getOnlyDispatched","dispatched","filter","onClick","sortedByDate","delivered","totalRecords","pageLimit","pageNeighbours","pageItemClass","index","toUpperCase","i","chemical","amount","Tabs","styled","div","Tab","button","active","Content","React","createContext","focusedDate","isDateFocused","isDateSelected","isDateHovered","isDateBlocked","isFirstOrLastSelectedDate","onDateFocus","onDateHover","onDateSelect","Day","dayLabel","dayRef","useContext","DatepickerContext","useDay","isSelected","isSelectedStartOrEnd","isWithinHoverRange","disabledDate","onKeyDown","onMouseEnter","tabIndex","getColorFn","isDisabled","selectedFirstOrLastColor","normalColor","selectedColor","rangeHoverColor","disabledColor","getColor","css","border","color","background","Month","year","month","firstDayOfWeek","useMonth","days","weekdayLabels","monthLabel","textAlign","margin","gridTemplateColumns","justifyContent","marginBottom","day","toString","NavButton","children","cursor","borderRadius","boxSizing","textDecoration","textShadow","transition","Datepicker","forwardRef","startDate","endDate","focusedInput","START_DATE","state","setState","cleanValue","useImperativeHandle","useDatepicker","onDatesChange","parentFunction","activeMonths","goToPreviousMonths","goToNextMonths","Provider","gridGap","Accordion","isOpen","setOpen","Search","setActive","indexN","setIndexN","handleClick","parseInt","target","id","getSiteTotalData","siteData","site1","site1A","site1B","site1C","alert","site1alert","setSite1DataTotal","site2","site2A","site2B","site2C","site2alert","setSite2DataTotal","getListChemicals","site1FullData","site2FullData","element","setSite1DetailedData","setSite2DetailedData","site1DataTotal","site2DataTotal","site1DetailedData","site2DetailedData","renderTableHeader","searchDates","setSearchDates","handleSearchDates","searchOb","clearFilters","filteredDates","item","moment","_d","isBetween","sortedByWarehouse","action","ticket","Aside","to","exact","activeClassName","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c27cf2d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useEffect, useState, useRef } from \"react\";\nimport Chartjs from \"chart.js\";\n\nconst ChartJobs = (props) => {\n  const [chartState, setChartState] = useState(props);\n  console.log(props);\n  console.log(chartState);\n\n  useEffect(() => {\n    console.log(chartState);\n  }, [chartState]);\n\n  const chartConfig = {\n    type: \"line\",\n    data: {\n      labels: [],\n      datasets: [\n        {\n          label: `Jobs completes`,\n          data: props.dates,\n\n          borderWidth: 1,\n          pointStyle: \"triangle\",\n          pointRadius: \"10\",\n          pointBackgroundColor: \"red\",\n        },\n      ],\n      pointStyle: \"triangle\",\n    },\n    options: {\n      scales: {\n        xAxes: [\n          {\n            type: \"time\",\n            time: {\n              unit: \"day\",\n              stepSize: 1,\n              displayFormat: \"DD/MM/YY\",\n              tooltipFormat: \"DD/MM/YY\",\n            },\n            ticks: {\n              major: {\n                enabled: true,\n                fontStyle: \"bold\",\n                fontSize: 14,\n              },\n            },\n          },\n        ],\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: true,\n            },\n          },\n        ],\n      },\n    },\n  };\n\n  console.log(\"start create chart\");\n  const chartContainer = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  console.log(chartInstance);\n  const updateDataset = (datasetIndex, newData) => {\n    if (chartInstance) {\n      chartInstance.config.data.datasets[datasetIndex].data = newData;\n      chartInstance.update();\n    }\n  };\n\n  updateDataset(0, props.dates);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer]);\n\n  return (\n    <div>\n      <canvas ref={chartContainer} />\n    </div>\n  );\n};\n\nexport default ChartJobs;\n","import React, { useState, useEffect } from \"react\";\nimport ChartJobs from \"./charts/ChartJobs\";\nimport \"../css/startPage.css\";\nimport axios from \"axios\";\n// import { FaAngleDown } from \"react-icons/fa\";\n\nexport default function StartPage() {\n  const [selectLabels, setselectLabels] = useState([\n    { label: \"Last week \", value: \"week\" },\n    { label: \"Last month\", value: \"month\" },\n  ]);\n\n  const [result, setResult] = useState([]);\n  //rewrite into component\n\n  const [alerts, setAlerts] = useState();\n\n  const getAlerts = async () => {\n    const siteStock = await axios.get(`http://localhost/sitesTotalA`);\n    console.log(siteStock.data);\n\n    siteStock.data.forEach((one) => {\n      if (one.totalA > 15) {\n        console.log(one);\n        setAlerts({\n          text: \"More than 15 A on a site\",\n          site: one.site,\n        });\n      }\n    });\n    console.log(alerts);\n  };\n\n  const getJobs = async () => {\n    const jobs = await axios.get(`http://localhost/jobs`);\n    console.log(jobs.data.response);\n\n    let allJobs = jobs.data.response;\n    convertData(allJobs);\n  };\n\n  const convertData = (allJobs) => {\n    let convertedArray = allJobs.map(function (job) {\n      job.date = job.date.substring(0, job.date.length - 9);\n      return job;\n    });\n    console.log({ convertedArray });\n\n    let permittedValues = convertedArray.map((job) => job.date);\n    permittedValues.sort();\n    console.log({ permittedValues });\n\n    let randomArray = permittedValues.map((one) => {\n      let addNumber = getRandomInt();\n      if (addNumber < 10) {\n        addNumber = \"0\" + addNumber;\n      }\n      one = one.substring(0, one.length - 2) + addNumber;\n\n      return one;\n    });\n    randomArray.sort();\n    console.log({ randomArray });\n\n    let counts = {};\n    randomArray.forEach((x) => {\n      counts[x] = (counts[x] || 0) + 1;\n      console.log(x);\n    });\n    console.log(counts);\n\n    for (let [key, value] of Object.entries(counts)) {\n      result.push({ t: key, y: value });\n    }\n    // const datesTochart = result.sort(t);\n    // console.log(datesTochart);\n\n    sortByKey(result, \"t\");\n\n    console.log({ result });\n    console.log(result.slice(result.length - 7));\n    setResult(result);\n\n    setJobDone({\n      dates: result.slice(result.length - 7),\n    });\n  };\n\n  function getRandomInt() {\n    return Math.floor(Math.random() * 31) + 1;\n  }\n\n  function sortByKey(array, key) {\n    return array.sort(function (a, b) {\n      var x = a[key];\n      var y = b[key];\n      return x < y ? -1 : x > y ? 1 : 0;\n    });\n  }\n\n  useEffect(() => {\n    getJobs();\n    getAlerts();\n  }, []);\n\n  const [jobsDone, setJobDone] = useState({});\n  // const [jobsDoneMonth, setJobDoneMonth] = useState({});\n\n  const getValue = (selectValue) => {\n    console.log(selectValue);\n    if (selectValue == \"month\") {\n      setJobDone({\n        dates: result,\n      });\n    } else {\n      setJobDone({ dates: result.slice(result.length - 7) });\n    }\n  };\n\n  return (\n    <>\n      <h1 className=\"title\"> Welcome to Toxic Chemical Dashboard</h1>\n      <div className=\"container-start-page\">\n        <div className=\"alerts box\">\n          <h3 className=\"alerts\"> Current active alerts </h3>\n          {console.log(alerts)}\n          {alerts ? (\n            <>\n              <div className=\"notification\">\n                <p className=\"notify\"> </p>\n                <p className=\"alert-text\">\n                  {\" \"}\n                  More than 15 A at site #{alerts.site}\n                </p>\n              </div>\n              <div className=\"fire\">\n                <h3>Send notification to fire brigade</h3>\n                <button className=\"notificationBtn\">Send notification</button>\n              </div>\n            </>\n          ) : (\n            <div>There are no active alerts</div>\n          )}\n        </div>\n        <div className=\"jobs box\">\n          <div className=\"jobs-select\">\n            <p className=\"job-text\">Jobs completed by</p>\n            <div>\n              <select\n                className=\"arrows\"\n                value={selectLabels.value}\n                onChange={(e) => getValue(e.currentTarget.value)}\n              >\n                {selectLabels.map(({ label, value }) => (\n                  <option key={value} value={value}>\n                    {label}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <ChartJobs {...jobsDone} />\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"../../css/header.css\";\nimport moment from \"moment\";\n\nexport default function Header() {\n  let time = new Date().toLocaleString();\n  // let day = moment(new Date()).format(\"DD/MM/YYYY\");\n\n  const [user, setUser] = useState({\n    name: \"Admin\",\n  });\n\n  const [date, setDate] = useState(new Date());\n\n  useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000);\n\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  return (\n    <>\n      <div className=\"main-header\">\n        <div className=\"hello\">\n          {\" \"}\n          <p> Hello {user.name}</p>\n          <p className=\"currentTime\">\n            {/* {day} */}\n            {time}\n          </p>\n        </div>\n        <h1>Toxic Chemical Industrie A/S</h1>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Chartjs from \"chart.js\";\n\nconst ChartChemicalsDelivered = (props) => {\n  const [chartState, setChartState] = useState(props);\n\n  console.log(props);\n  // console.log(chartState);\n\n  useEffect(() => {\n    console.log(chartState);\n  }, [chartState]);\n\n  let total = Object.values(props).pop();\n  console.log(total);\n  const letters = Object.keys(props);\n  const values = Object.values(props);\n  console.log(letters);\n  letters.pop();\n  letters.pop();\n  values.pop();\n  values.pop();\n  console.log(letters, values);\n\n  const chartConfig = {\n    type: \"pie\",\n    data: {\n      labels: letters,\n      datasets: [\n        {\n          label: `Total`,\n          data: values,\n          backgroundColor: [\n            \"rgba(249, 248, 113, 0.4)\",\n            \"rgba(87, 120, 114, 0.4)\",\n            \"rgba(181, 221, 123, 0.4)\",\n          ],\n          borderColor: [\n            \"rgba(249, 248, 113, 1)\",\n            \"rgba(87, 120, 114, 1)\",\n            \"rgba(181, 221, 123, 1)\",\n          ],\n        },\n      ],\n    },\n    options: {\n      legend: {\n        display: true,\n        position: \"left\",\n        labels: {\n          fontColor: \"rgb(85, 84, 84)\",\n        },\n      },\n      title: {\n        display: true,\n        position: \"bottom\",\n        text: `Total ${total} ku`,\n      },\n      layout: {\n        padding: {\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0,\n        },\n      },\n    },\n  };\n\n  const chartContainer = useRef(null);\n\n  const [chartInstance, setChartInstance] = useState(null);\n  const updateDataset = (datasetIndex, newData, total) => {\n    if (chartInstance) {\n      chartInstance.config.data.datasets[datasetIndex].data = newData;\n      chartInstance.config.options.title.text = `Total ${total} ku`;\n      chartInstance.update();\n    }\n  };\n  updateDataset(0, values, total);\n  console.log(chartInstance);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer]);\n\n  return (\n    <div>\n      <canvas ref={chartContainer} />\n    </div>\n  );\n};\n\nexport default ChartChemicalsDelivered;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Chartjs from \"chart.js\";\n\nconst ChartChemicalsDispatched = (props) => {\n  const [chartState, setChartState] = useState(props);\n\n  console.log(props);\n  // console.log(chartState);\n\n  useEffect(() => {\n    console.log(chartState);\n  }, [chartState]);\n\n  let total = Object.values(props).pop();\n  console.log(total);\n  const letters = Object.keys(props);\n  const values = Object.values(props);\n  console.log(letters);\n  letters.pop();\n  letters.pop();\n  values.pop();\n  values.pop();\n  console.log(letters, values);\n\n  const chartConfig = {\n    type: \"pie\",\n    data: {\n      labels: letters,\n      datasets: [\n        {\n          label: `Total`,\n          data: values,\n          backgroundColor: [\n            \"rgba(249, 248, 113, 0.4)\",\n            \"rgba(87, 120, 114, 0.4)\",\n            \"rgba(181, 221, 123, 0.4)\",\n          ],\n          borderColor: [\n            \"rgba(249, 248, 113, 1)\",\n            \"rgba(87, 120, 114, 1)\",\n            \"rgba(181, 221, 123, 1)\",\n          ],\n        },\n      ],\n    },\n    options: {\n      legend: {\n        display: true,\n        position: \"left\",\n        labels: {\n          fontColor: \"rgb(85, 84, 84)\",\n        },\n      },\n      title: {\n        display: true,\n        text: `Total ${total} ku`,\n        position: \"bottom\",\n      },\n      layout: {\n        padding: {\n          left: 50,\n          right: 0,\n          top: 0,\n          bottom: 0,\n        },\n      },\n    },\n  };\n\n  const chartContainer = useRef(null);\n\n  const [chartInstance, setChartInstance] = useState(null);\n  const updateDataset = (datasetIndex, newData, total) => {\n    if (chartInstance) {\n      chartInstance.config.data.datasets[datasetIndex].data = newData;\n      chartInstance.config.options.title.text = `Total ${total} ku`;\n      chartInstance.update();\n    }\n  };\n  updateDataset(0, values, total);\n  console.log(chartInstance);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer]);\n\n  return (\n    <div>\n      <canvas ref={chartContainer} />\n    </div>\n  );\n};\n\nexport default ChartChemicalsDispatched;\n","import React, { useState, useEffect } from \"react\";\nimport \"../css/chemicals.css\";\nimport axios from \"axios\";\nimport ChartChemicalsDelivered from \"./charts/ChartChemicalsDelivered\";\nimport ChartChemicalsDispatched from \"./charts/ChartChemicalsDispatched\";\n\nexport default function Chemicals() {\n  //preparing for fetch\n  const [loading, setLoading] = useState(true);\n  const [selectLabelsDelivered, setselectLabelsDelivered] = useState([\n    { label: \"Total\", value: \"total\" },\n    { label: \"Today\", value: \"today\" },\n    { label: \"Week\", value: \"week\" },\n    { label: \"Month\", value: \"month\" },\n  ]);\n\n  const [selectLabelsDispatched, setSelectLabelsDispatched] = useState([\n    { label: \"Total\", value: \"total\" },\n    { label: \"Today\", value: \"today\" },\n    { label: \"Week\", value: \"week\" },\n    { label: \"Month\", value: \"month\" },\n  ]);\n\n  const [deliveryForChart, setDeliveryForChart] = useState();\n\n  const getAllDelivery = async () => {\n    setLoading(true);\n    const allDelivery = await axios.get(`http://localhost/totaldelivery`);\n    console.log(allDelivery.data);\n    setDeliveryForChart(allDelivery.data);\n    setLoading(false);\n  };\n\n  const getDeliveryByType = async () => {\n    setLoading(true);\n    const deliveryByType = await axios.get(`http://localhost/delivery`);\n    console.log(deliveryByType.data);\n    setDeliveredByTypes(deliveryByType.data);\n    setLoading(false);\n  };\n\n  const [dispatchForChart, setDispatchForChart] = useState();\n\n  const getAllDispatch = async () => {\n    setLoading(true);\n    const allDispatch = await axios.get(`http://localhost/totaldispatch`);\n    console.log(allDispatch.data);\n    setDispatchForChart(allDispatch.data);\n    setLoading(false);\n  };\n\n  const getDispatchByType = async () => {\n    setLoading(true);\n    const dispatch = await axios.get(`http://localhost/dispatch`);\n    console.log(dispatch.data);\n    setDispatchedByTypes(dispatch.data);\n    setLoading(false);\n  };\n\n  const [dispatchedByTypes, setDispatchedByTypes] = useState([\n    // { A: 300, B: 78, C: 201, desc: \"total\", total: 579 },\n    // { A: 10, B: 40, C: 6, desc: \"today\", total: 56 },\n    // { A: 80, B: 50, C: 16, desc: \"week\", total: 146 },\n    // { A: 150, B: 150, C: 50, desc: \"month\", total: 350 },\n  ]);\n\n  const [deliveredByTypes, setDeliveredByTypes] = useState([]);\n\n  const getValueForDelivered = (selectedValue) => {\n    console.log(selectedValue);\n\n    deliveredByTypes.forEach((deliveredByTypes) => {\n      if (selectedValue == deliveredByTypes.desc) {\n        console.log({ deliveryForChart });\n        console.log(deliveredByTypes);\n        setDeliveryForChart({\n          A: deliveredByTypes.A,\n          B: deliveredByTypes.B,\n          C: deliveredByTypes.C,\n          desc: deliveredByTypes.desc,\n          total: deliveredByTypes.total,\n        });\n        console.log({ deliveryForChart });\n      }\n    });\n  };\n\n  const getValueForDispatched = (selectedValue) => {\n    console.log(selectedValue);\n    dispatchedByTypes.forEach((dispatchedByTypes) => {\n      if (selectedValue == dispatchedByTypes.desc) {\n        setDispatchForChart({\n          A: dispatchedByTypes.A,\n          B: dispatchedByTypes.B,\n          C: dispatchedByTypes.C,\n          desc: dispatchedByTypes.desc,\n          total: dispatchedByTypes.total,\n        });\n        console.log({ dispatchForChart });\n      }\n    });\n  };\n\n  useEffect(() => {\n    console.log(deliveryForChart);\n    getAllDelivery();\n    getDeliveryByType();\n    getDispatchByType();\n    getAllDispatch();\n  }, []);\n\n  return (\n    <>\n      <div>\n        {\" \"}\n        <h1 className=\"title\"> Chemicals overview</h1>\n        {loading || deliveryForChart == null ? (\n          <p className=\"loading\">Loading...</p>\n        ) : (\n          <div className=\"chemicals-container\">\n            <div className=\"deliver-container box\">\n              <h2>Delivered</h2>\n              {deliveredByTypes !== null ? (\n                <>\n                  <div className=\"divSelect\">\n                    <select\n                      className=\"arrows\"\n                      value={selectLabelsDelivered.value}\n                      onChange={(e) =>\n                        getValueForDelivered(e.currentTarget.value)\n                      }\n                    >\n                      {selectLabelsDelivered.map(({ label, value }) => (\n                        <option key={value} value={value}>\n                          {label}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </>\n              ) : (\n                <p className=\"loading\">Loading</p>\n              )}\n\n              {Object.keys(deliveryForChart).length === 0 &&\n              deliveryForChart.constructor === Object ? (\n                <p className=\"loading\">Loading</p>\n              ) : (\n                <ChartChemicalsDelivered {...deliveryForChart} />\n              )}\n            </div>\n            <div className=\"dispatch-container box\">\n              <h2>Dispatched</h2>\n\n              {/* <select\n                value={selectLabelsDispatched.value}\n                onChange={(e) => getValueForDispatched(e.currentTarget.value)}\n              >\n                {selectLabelsDispatched.map(({ label, value }) => (\n                  <option key={value} value={value}>\n                    {label}\n                  </option>\n                ))}\n              </select> */}\n              <div className=\"divSelect\">\n                <select\n                  className=\"arrows\"\n                  onChange={(e) => getValueForDispatched(e.currentTarget.value)}\n                >\n                  <option defaultValue=\"total\">Total</option>\n                  <option value=\"today\">Today</option>\n                  <option value=\"week\">Week</option>\n                  <option value=\"month\">Month</option>\n                </select>\n              </div>\n              {loading ? (\n                <p className=\"loading\">Loading</p>\n              ) : (\n                <ChartChemicalsDispatched {...dispatchForChart} />\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Chartjs from \"chart.js\";\n\nconst ChartWarehouse = (props) => {\n  const [chartState, setChartState] = useState(props);\n  console.log(props);\n  console.log(chartState);\n\n  useEffect(() => {\n    console.log(chartState);\n  }, [chartState]);\n\n  const warehouse = Object.values(props).pop();\n  console.log(warehouse);\n  const letters = Object.keys(props);\n  const values = Object.values(props);\n\n  letters.pop();\n  values.pop();\n\n  console.log(letters, values);\n\n  const chartConfig = {\n    type: \"bar\",\n    data: {\n      labels: letters,\n      datasets: [\n        {\n          label: `Warehouse`,\n          data: values,\n          backgroundColor: [\n            \"rgba(249, 248, 113, 0.4)\",\n            \"rgba(87, 120, 114, 0.4)\",\n          ],\n          borderColor: [\"rgba(249, 248, 113, 1)\", \"rgba(87, 120, 114, 1)\"],\n          // borderWidth: 1,\n        },\n      ],\n    },\n    options: {\n      legend: {\n        display: false,\n        position: \"left\",\n        labels: {\n          fontColor: \"rgb(85, 84, 84)\",\n        },\n      },\n      title: {\n        display: true,\n        text: `Warehouse# ${warehouse}`,\n        position: \"top\",\n      },\n      layout: {\n        padding: {\n          left: 70,\n          right: 0,\n          top: 0,\n          bottom: 0,\n        },\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: true,\n            },\n          },\n        ],\n      },\n    },\n  };\n\n  console.log(\"start create chart\");\n  const chartContainer = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n\n  // console.log(chartContainer);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer]);\n\n  const updateDataset = (datasetIndex, newData) => {\n    chartInstance.data.datasets[datasetIndex].data = newData;\n    chartInstance.update();\n  };\n\n  return (\n    <div>\n      <canvas ref={chartContainer} />\n    </div>\n  );\n};\n\nexport default ChartWarehouse;\n","import React, { useState, useEffect } from \"react\";\nimport \"../css/warehouse.css\";\nimport axios from \"axios\";\n\nimport ChartWarehouse from \"./charts/ChartWarehouse\";\n\n// (1st-10ku, 2nd-12ku, 3rd-5ku, 4th-3ku, 5th-9ku)\n\nexport default function Warehouses() {\n  const [isLoading, setLoading] = useState(true);\n  const [data1, setData1] = useState(null);\n  const [data2, setData2] = useState(null);\n  const [data3, setData3] = useState(null);\n  const [data4, setData4] = useState(null);\n  const [data5, setData5] = useState(null);\n  const [data6, setData6] = useState(null);\n  const [data7, setData7] = useState(null);\n  const [data8, setData8] = useState(null);\n  const [data9, setData9] = useState(null);\n  const [data10, setData10] = useState(null);\n\n  const getDataByWarehouse = async () => {\n    const stock1 = await axios.get(`http://localhost/details/${1}`);\n    const stock2 = await axios.get(`http://localhost/details/${2}`);\n    const stock3 = await axios.get(`http://localhost/details/${3}`);\n    const stock4 = await axios.get(`http://localhost/details/${4}`);\n    const stock5 = await axios.get(`http://localhost/details/${5}`);\n    const stock6 = await axios.get(`http://localhost/details/${6}`);\n    const stock7 = await axios.get(`http://localhost/details/${7}`);\n    const stock8 = await axios.get(`http://localhost/details/${8}`);\n    const stock9 = await axios.get(`http://localhost/details/${9}`);\n    const stock10 = await axios.get(`http://localhost/details/${10}`);\n    console.log(stock1.data, stock2.data, stock3.data);\n    console.log(Object.values(stock1.data));\n    const data1 = checkForNull(stock1.data);\n    const data2 = checkForNull(stock2.data);\n    const data3 = checkForNull(stock3.data);\n    const data4 = checkForNull(stock4.data);\n    const data5 = checkForNull(stock5.data);\n    const data6 = checkForNull(stock6.data);\n    const data7 = checkForNull(stock7.data);\n    const data8 = checkForNull(stock8.data);\n    const data9 = checkForNull(stock9.data);\n    const data10 = checkForNull(stock10.data);\n    console.log(data1);\n    setData1(data1);\n    setData2(data2);\n    setData3(data3);\n    setData4(data4);\n    setData5(data5);\n    setData6(data6);\n    setData7(data7);\n    setData8(data8);\n    setData9(data9);\n    setData10(data10);\n    setLoading(false);\n    console.log(data10);\n  };\n\n  const checkForNull = (object) => {\n    if (object == null) {\n      return null;\n    } else {\n      if (object.A == null) {\n        delete object.A;\n      }\n      if (object.B == null) {\n        delete object.B;\n      }\n\n      if (object.C == null) {\n        delete object.C;\n      }\n      console.log(object);\n      return object;\n    }\n  };\n\n  useEffect(() => {\n    getDataByWarehouse();\n    if (data1 !== {}) {\n      console.log(\"not null!\");\n      console.log(data1);\n    }\n  }, []);\n\n  {\n    /* {isLoading ? <p>Loading...</p> :(\n\n      )} */\n  }\n\n  return (\n    <>\n      <h1 className=\"title\"> Current stock </h1>\n      <div className=\"superWrapper\">\n        <div className=\"site-wrapper box\">\n          <h2 className=\"title1\">Site 1</h2>\n          {isLoading ? (\n            <p className=\"loading\">Loading...</p>\n          ) : (\n            <div className=\"warehouse-container\">\n              <div className=\"canvas-container\">\n                <ChartWarehouse {...data1} />\n              </div>\n              <div className=\"canvas-container\">\n                <ChartWarehouse {...data2} />\n              </div>\n              <div className=\"canvas-container\">\n                <ChartWarehouse {...data3} />\n              </div>\n              <div className=\"canvas-container\">\n                <ChartWarehouse {...data4} />\n              </div>\n              <div className=\"canvas-container\">\n                <ChartWarehouse {...data5} />\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"site-wrapper2 box\">\n          <h2 className=\"title1\">Site 2</h2>\n          {isLoading ? (\n            <p className=\"loading\">Loading...</p>\n          ) : (\n            <div className=\"warehouse-container\">\n              <div className=\"canvas-container\">\n                <ChartWarehouse {...data6} />\n              </div>\n              <div className=\"canvas-container\">\n                <ChartWarehouse {...data7} />\n              </div>\n              <div className=\"canvas-container\">\n                <ChartWarehouse {...data8} />\n              </div>\n              <div className=\"canvas-container\">\n                <ChartWarehouse {...data9} />\n              </div>\n              {data10.warehouse === null ? (\n                <p>Empty warehouse</p>\n              ) : (\n                <div className=\"canvas-container\">\n                  <ChartWarehouse {...data10} />\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../css/statistic.css\";\nimport Paginator from \"react-hooks-paginator\";\n\nexport default function Statistic() {\n  const [audit, setAudit] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [offset, setOffset] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentData, setCurrentData] = useState([]);\n  const pageLimit = 10;\n  const [initialState, setInitialState] = useState([]);\n\n  const getAuditData = async () => {\n    const list = await axios.get(`http://localhost/audit`);\n    console.log(list.data);\n    setAudit(list.data);\n    setInitialState(list.data);\n    console.log(initialState);\n    console.log(audit);\n    setLoading(false);\n  };\n\n  const renderTableHeader = (data) => {\n    let header = Object.keys(data[0]);\n    return header.map((key, index) => {\n      return (\n        <p key={index} className=\"tabel-header\">\n          {key.toUpperCase()}\n        </p>\n      );\n    });\n  };\n  const sortByDate = () => {\n    setAudit();\n    const sortedByDate = [...audit].sort((a, b) => {\n      let dateA = new Date(a.date),\n        dateB = new Date(b.date);\n\n      return dateA - dateB;\n    });\n    setAudit(sortedByDate);\n  };\n\n  const getOnlyDelivered = () => {\n    console.log(initialState);\n    console.log({ audit });\n    setAudit(initialState);\n\n    const delivered = audit.filter((one) => {\n      return one.type == \"delivered\";\n    });\n\n    console.log(delivered);\n\n    setAudit(delivered);\n  };\n\n  const handelClick = () => {\n    console.log({ audit });\n    setAudit(initialState);\n\n    getOnlyDispatched();\n  };\n\n  const getOnlyDispatched = () => {\n    console.log(\"in disp\");\n\n    console.log({ audit });\n    const dispatched = audit.filter((one) => {\n      return one.type == \"dispatched\";\n    });\n\n    console.log(dispatched);\n\n    setAudit(dispatched);\n  };\n\n  const showAll = () => {\n    getAuditData();\n  };\n\n  useEffect(() => {\n    getAuditData();\n  }, []);\n\n  useEffect(() => {}, [audit]);\n\n  useEffect(() => {\n    if (audit.length) {\n      setCurrentData(audit.slice(offset, offset + pageLimit));\n    }\n  }, [offset, audit]);\n\n  return (\n    <>\n      <div className=\"audit-container\">\n        <h1 className=\"title3\">Audit tables</h1>\n\n        {loading ? (\n          <p className=\"loading\">Loading...</p>\n        ) : (\n          <div className=\"div-stat\">\n            <div className=\"button-container1\">\n              <button onClick={showAll}>Show All</button>\n              <button onClick={sortByDate}>Sort by date</button>\n              <button onClick={getOnlyDelivered}>Only delivered</button>\n              <button onClick={handelClick}>Only dispatched</button>\n            </div>\n            <div>\n              <Paginator\n                totalRecords={audit.length}\n                pageLimit={12}\n                pageNeighbours={1}\n                setOffset={setOffset}\n                currentPage={currentPage}\n                setCurrentPage={setCurrentPage}\n                // className={\"paginationItemStyle\"}\n                pageItemClass={\"paginationItemStyle\"}\n                // pageLinkClass={\"pageLink\"}\n                // pageActiveClass={\"activePage\"}\n              />\n            </div>\n            <div className=\"grid-list\">\n              <div className=\"tabelHeader2\">{renderTableHeader(audit)}</div>\n\n              <div className=\"stat\">\n                {currentData.map((data, i) => (\n                  <div className=\"table-rows1\" key={i}>\n                    <p className=\"tabel-item\"> {data.type}</p>\n                    <p className=\"tabel-item\"> {data.chemical}</p>\n                    <p className=\"tabel-item\"> {data.amount}</p>\n                    <p className=\"tabel-item\"> {data.warehouse}</p>\n                    <p className=\"tabel-item\"> {data.site}</p>\n                    <p className=\"tabel-item\"> {data.date}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","import styled from \"styled-components\";\nexport const Tabs = styled.div`\n  overflow: hidden;\n  background: #fff;\n  font-family: Open Sans;\n  height: 3em;\n`;\n\nexport const Tab = styled.button`\n  border: none;\n  outline: none;\n  cursor: pointer;\n  width: 49%;\n  position: relative;\n\n  margin-right: 0.1em;\n  font-size: 1em;\n  border: ${(props) => (props.active ? \"2px solid #629c81\" : \"\")};\n  border-bottom: ${(props) => (props.active ? \"none\" : \"\")};\n  background-color: ${(props) => (props.active ? \"white\" : \"#c1bfbf\")};\n  height: ${(props) => (props.active ? \"3em\" : \"2.6em; top:.2em\")};\n  transition: background-color 0.5s ease-in-out;\n\n  :hover {\n    background-color: white;\n  }\n`;\nexport const Content = styled.div`\n  ${(props) => (props.active ? \"\" : \"display:none\")}\n`;\n","import React from \"react\";\nexport const datepickerContextDefaultValue = {\n  focusedDate: null,\n  isDateFocused: () => false,\n  isDateSelected: () => false,\n  isDateHovered: () => false,\n  isDateBlocked: () => false,\n  isFirstOrLastSelectedDate: () => false,\n  onDateFocus: () => {},\n  onDateHover: () => {},\n  onDateSelect: () => {},\n};\nexport default React.createContext(datepickerContextDefaultValue);\n","/** @jsx jsx */\nimport { useRef, useContext } from \"react\";\nimport { useDay } from \"@datepicker-react/hooks\";\nimport { jsx } from \"@emotion/core\";\nimport DatepickerContext from \"./context/datepickerContext\";\nimport getColor from \"./utils/getColor\";\n\nfunction Day({ dayLabel, date }) {\n  const dayRef = useRef(null);\n  const {\n    focusedDate,\n    isDateFocused,\n    isDateSelected,\n    isDateHovered,\n    isDateBlocked,\n    isFirstOrLastSelectedDate,\n    onDateSelect,\n    onDateFocus,\n    onDateHover,\n  } = useContext(DatepickerContext);\n  const {\n    isSelected,\n    isSelectedStartOrEnd,\n    isWithinHoverRange,\n    disabledDate,\n    onClick,\n    onKeyDown,\n    onMouseEnter,\n    tabIndex,\n  } = useDay({\n    date,\n    focusedDate,\n    isDateFocused,\n    isDateSelected,\n    isDateHovered,\n    isDateBlocked,\n    isFirstOrLastSelectedDate,\n    onDateFocus,\n    onDateSelect,\n    onDateHover,\n    dayRef,\n  });\n\n  if (!dayLabel) {\n    return <div />;\n  }\n\n  const getColorFn = getColor(\n    isSelected,\n    isSelectedStartOrEnd,\n    isWithinHoverRange,\n    disabledDate\n  );\n\n  return (\n    <button\n      onClick={onClick}\n      onKeyDown={onKeyDown}\n      onMouseEnter={onMouseEnter}\n      tabIndex={tabIndex}\n      type=\"button\"\n      ref={dayRef}\n      css={{\n        padding: \"8px\",\n        border: 0,\n        color: getColorFn({\n          selectedFirstOrLastColor: \"#FFFFFF\",\n          normalColor: \"#001217\",\n          selectedColor: \"#629c81\",\n          rangeHoverColor: \"#FFFFFF\",\n          disabledColor: \"#808285\",\n        }),\n        background: getColorFn({\n          selectedFirstOrLastColor: \"#629c81\",\n          normalColor: \"#FFFFFF\",\n          selectedColor: \"#beead5\",\n          rangeHoverColor: \"#629c81\",\n          disabledColor: \"#FFFFFF\",\n        }),\n      }}\n    >\n      {dayLabel}\n    </button>\n  );\n}\n\nexport default Day;\n","export default function getColor(\n  isSelected,\n  isSelectedStartOrEnd,\n  isWithinHoverRange,\n  isDisabled\n) {\n  return ({\n    selectedFirstOrLastColor,\n    normalColor,\n    selectedColor,\n    rangeHoverColor,\n    disabledColor,\n  }) => {\n    if (isSelectedStartOrEnd) {\n      return selectedFirstOrLastColor;\n    } else if (isSelected) {\n      return selectedColor;\n    } else if (isWithinHoverRange) {\n      return rangeHoverColor;\n    } else if (isDisabled) {\n      return disabledColor;\n    } else {\n      return normalColor;\n    }\n  };\n}\n","/** @jsx jsx */\nimport { useMonth } from \"@datepicker-react/hooks\";\nimport { jsx } from \"@emotion/core\";\nimport Day from \"./Day\";\n\nfunction Month({ year, month, firstDayOfWeek }) {\n  const { days, weekdayLabels, monthLabel } = useMonth({\n    year,\n    month,\n    firstDayOfWeek,\n  });\n\n  return (\n    <div>\n      <div css={{ textAlign: \"center\", margin: \"0 0 16px\" }}>\n        <strong>{monthLabel}</strong>\n      </div>\n      <div\n        css={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(7, 1fr)\",\n          justifyContent: \"center\",\n          marginBottom: \"10px\",\n          fontSize: \"10px\",\n        }}\n      >\n        {weekdayLabels.map((dayLabel) => (\n          <div css={{ textAlign: \"center\" }} key={dayLabel}>\n            {dayLabel}\n          </div>\n        ))}\n      </div>\n      <div\n        css={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(7, 1fr)\",\n          justifyContent: \"center\",\n        }}\n      >\n        {days.map((day, index) => {\n          if (typeof day === \"object\") {\n            return (\n              <Day\n                date={day.date}\n                key={day.date.toString()}\n                dayLabel={day.dayLabel}\n              />\n            );\n          }\n\n          return <div key={index} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Month;\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport React, { useState } from \"react\";\n\nimport { css } from \"@emotion/core\";\nexport default function NavButton({ children, onClick }) {\n  return (\n    <button\n      type=\"button\"\n      onClick={onClick}\n      css={{\n        display: \"inline-block\",\n        cursor: \"pointer\",\n        padding: \"0.5em 1em\",\n        margin: \"0 0.1em 0.1em 0\",\n        border: \"0.16em solid rgba(255, 255, 255, 0)\",\n        borderRadius: \"1em\",\n        boxSizing: \"border-box\",\n        textDecoration: \"none\",\n        backgroundColor: \"#e2e2e2\",\n        color: \"#436d59\",\n        textShadow: \"0 0.04em 0.04em rgba(0, 0, 0, 0.35)\",\n        textAlign: \"center\",\n        transition: \"all 0.2s\",\n      }}\n    >\n      {children}\n    </button>\n  );\n}\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport React, {\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { useDatepicker, START_DATE } from \"@datepicker-react/hooks\";\n// import { css } from \"emotion\";\nimport Month from \"./Month\";\nimport NavButton from \"./NavButton\";\nimport DatepickerContext from \"./context/datepickerContext\";\n\nconst Datepicker = forwardRef((props, ref) => {\n  const [state, setState] = useState({\n    startDate: null,\n    endDate: null,\n    focusedInput: START_DATE,\n  });\n  console.log({ props });\n\n  const cleanValue = () => {\n    setState({ startDate: null, endDate: null, focusedInput: START_DATE });\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      cleanValue: cleanValue,\n    };\n  });\n\n  const {\n    firstDayOfWeek,\n    activeMonths,\n    isDateSelected,\n    isDateHovered,\n    isFirstOrLastSelectedDate,\n    isDateBlocked,\n    isDateFocused,\n    focusedDate,\n    onDateHover,\n    onDateSelect,\n    onDateFocus,\n    goToPreviousMonths,\n    goToNextMonths,\n  } = useDatepicker({\n    startDate: state.startDate,\n    endDate: state.endDate,\n    focusedInput: state.focusedInput,\n    onDatesChange: handleDateChange,\n  });\n  function handleDateChange(data) {\n    if (!data.focusedInput) {\n      setState({ ...data, focusedInput: START_DATE });\n    } else {\n      setState(data);\n\n      console.log(data);\n    }\n    console.log(data);\n    props.parentFunction(data);\n  }\n\n  return (\n    <DatepickerContext.Provider\n      value={{\n        focusedDate,\n        isDateFocused,\n        isDateSelected,\n        isDateHovered,\n        isDateBlocked,\n        isFirstOrLastSelectedDate,\n        onDateSelect,\n        onDateFocus,\n        onDateHover,\n      }}\n    >\n      {/* <div>\n        <strong>Start date: </strong>\n        {state.startDate && state.startDate.toLocaleString()}\n      </div>\n      <div>\n        <strong>End date: </strong>\n        {state.endDate && state.endDate.toLocaleString()}\n      </div> */}\n      <div className=\"navDiv\">\n        <NavButton onClick={goToPreviousMonths}>Previous</NavButton>\n        <NavButton onClick={goToNextMonths}>Next</NavButton>\n      </div>\n      <div\n        css={{\n          display: \"grid\",\n          margin: \"32px 0 0\",\n          gridTemplateColumns: `repeat(${activeMonths.length}, 300px)`,\n          gridGap: \"0 64px\",\n        }}\n      >\n        {activeMonths.map((month) => (\n          <Month\n            key={`${month.year}-${month.month}`}\n            year={month.year}\n            month={month.month}\n            firstDayOfWeek={firstDayOfWeek}\n          />\n        ))}\n      </div>\n    </DatepickerContext.Provider>\n  );\n});\nexport default Datepicker;\n","import React from \"react\";\n\nconst Accordion = ({ title, children }) => {\n  const [isOpen, setOpen] = React.useState(false);\n  return (\n    <div className=\"accordion-wrapper\">\n      <div\n        className={`accordion-title ${isOpen ? \"open\" : \"\"}`}\n        onClick={() => setOpen(!isOpen)}\n      >\n        {title}\n      </div>\n      <div className={`accordion-item  ${!isOpen ? \"collapsed\" : \"\"}`}>\n        <div className=\"accordion-content box\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Accordion;\n","import React, { useState, useEffect, useRef } from \"react\";\n// import { Tabs, useTabState, usePanelState } from \"@bumaga/tabs\";\nimport { Tabs, Tab, Content } from \"./TabStyle\";\nimport \"../css/search.css\";\nimport Datepicker from \"./Datepicker/Datepicker\";\nimport Accordion from \"./Accordion\";\nimport * as moment from \"moment\";\nimport axios from \"axios\";\n\nexport default function Search() {\n  const [loading, setLoading] = useState(true);\n  const [active, setActive] = useState(0);\n  const [indexN, setIndexN] = useState(0);\n  const handleClick = (e) => {\n    const index = parseInt(e.target.id, 0);\n    setIndexN(index);\n    console.log({ indexN });\n    if (index !== active) {\n      setActive(index);\n      console.log(active);\n    }\n  };\n\n  const ref = useRef(null);\n\n  const getSiteTotalData = async () => {\n    const siteData = await axios.get(`http://localhost/sites`);\n    console.log(siteData.data);\n    const site1 = {\n      A: siteData.data.site1A !== null ? siteData.data.site1A : \"0\",\n      B: siteData.data.site1B !== null ? siteData.data.site1B : \"0\",\n      C: siteData.data.site1C !== null ? siteData.data.site1C : \"0\",\n      alert: siteData.data.site1alert !== null ? siteData.data.site1alert : \"0\",\n    };\n\n    setSite1DataTotal(site1);\n\n    const site2 = {\n      A: siteData.data.site2A,\n      B: siteData.data.site2B,\n      C: siteData.data.site2C,\n      alert: siteData.data.site2alert,\n    };\n    setSite2DataTotal(site2);\n    console.log(site1, site2);\n    setLoading(false);\n  };\n\n  const getListChemicals = async () => {\n    setLoading(true);\n    const list = await axios.get(`http://localhost/listChemical`);\n    console.log(list.data);\n    const site1FullData = [];\n    const site2FullData = [];\n    list.data.forEach((element) => {\n      if (element.warehouse > 5) {\n        site2FullData.push(element);\n      } else {\n        site1FullData.push(element);\n      }\n    });\n    console.log(site2FullData, site1FullData);\n    setSite1DetailedData(site1FullData);\n    setSite2DetailedData(site2FullData);\n    setLoading(false);\n  };\n\n  const getData = () => {\n    getSiteTotalData();\n    getListChemicals();\n  };\n\n  const [site1DataTotal, setSite1DataTotal] = useState();\n\n  const [site2DataTotal, setSite2DataTotal] = useState();\n\n  const [site1DetailedData, setSite1DetailedData] = useState();\n  const [site2DetailedData, setSite2DetailedData] = useState();\n\n  const renderTableHeader = (data) => {\n    let header = Object.keys(data[0]);\n    return header.map((key, index) => {\n      return (\n        <p key={index} className=\"tabel-header\">\n          {key.toUpperCase()}\n        </p>\n      );\n    });\n  };\n\n  const sortByWarehouse1 = () => {\n    // console.log(site1DetailedData[0].date);\n    const sortedByWarehouse = [...site1DetailedData].sort((a, b) => {\n      return a.warehouse - b.warehouse;\n    });\n    setSite1DetailedData(sortedByWarehouse);\n  };\n\n  const sortByWarehouse2 = () => {\n    // console.log(site1DetailedData[0].date);\n    const sortedByWarehouse = [...site2DetailedData].sort((a, b) => {\n      return a.warehouse - b.warehouse;\n    });\n    setSite2DetailedData(sortedByWarehouse);\n  };\n\n  const sortByDate1 = () => {\n    const sortedByDate = [...site1DetailedData].sort((a, b) => {\n      let dateA = new Date(a.date),\n        dateB = new Date(b.date);\n\n      return dateA - dateB;\n    });\n    setSite1DetailedData(sortedByDate);\n  };\n\n  const sortByDate2 = () => {\n    const sortedByDate = [...site2DetailedData].sort((a, b) => {\n      let dateA = new Date(a.date),\n        dateB = new Date(b.date);\n\n      return dateA - dateB;\n    });\n    setSite2DetailedData(sortedByDate);\n  };\n\n  const [searchDates, setSearchDates] = useState();\n\n  function handleSearchDates(value) {\n    console.log(value);\n    const searchOb = {\n      endDate: value.endDate,\n      startDate: value.startDate,\n    };\n    setSearchDates(searchOb);\n\n    console.log(searchDates);\n  }\n\n  const clearFilters = async () => {\n    setSearchDates(null);\n    ref.current.cleanValue();\n  };\n\n  useEffect(() => {\n    if (searchDates == null) {\n      getData();\n    }\n    console.log({ indexN });\n    if (active === 1) {\n      if (searchDates && searchDates.endDate) {\n        // console.log(searchDates);\n        let filteredDates = site2DetailedData.filter((item) => {\n          let date = moment.utc(item.date)._d;\n          console.log(date);\n          console.log(searchDates.startDate);\n          if (\n            moment(date).isBetween(\n              moment(searchDates.startDate),\n              moment(searchDates.endDate),\n              null,\n              \"[]\"\n            )\n          ) {\n            return true;\n          } else {\n            return false;\n          }\n        });\n        console.log(filteredDates);\n        setSite2DetailedData(filteredDates);\n      }\n    } else {\n      if (searchDates && searchDates.endDate) {\n        // console.log(searchDates);\n        let filteredDates = site1DetailedData.filter((item) => {\n          let date = moment.utc(item.date)._d;\n          console.log(date);\n          console.log(searchDates.startDate);\n          if (\n            moment(date).isBetween(\n              moment(searchDates.startDate),\n              moment(searchDates.endDate),\n              null,\n              \"[]\"\n            )\n          ) {\n            return true;\n          } else {\n            return false;\n          }\n        });\n        console.log(filteredDates);\n        setSite1DetailedData(filteredDates);\n      }\n    }\n    // console.log(searchDates1);\n  }, [searchDates]);\n\n  //\n\n  return (\n    <div>\n      <h1 className=\"title\">Sites overview</h1>\n\n      <Tabs>\n        <Tab onClick={handleClick} active={active === 0} id={0}>\n          <h3 className=\"site-name\">Site 1</h3>\n        </Tab>\n\n        <Tab onClick={handleClick} active={active === 1} id={1}>\n          <h3 className=\"site-name\">Site 2</h3>\n        </Tab>\n      </Tabs>\n      <>\n        <Content active={active === 0}>\n          {/* <h1>Site 1</h1> */}\n          {loading ? (\n            <p className=\"loading\">Loading...</p>\n          ) : (\n            <div className=\"total-container\">\n              <p className=\"total-desc1\">\n                <strong>In total:</strong> <strong>A:</strong>{\" \"}\n                {site1DataTotal.A} <strong>B:</strong> {site1DataTotal.B}{\" \"}\n                <strong>C:</strong> {site1DataTotal.C} <strong>Alert:</strong>\n                {site1DataTotal.alert}{\" \"}\n              </p>\n              <div className=\"button-container\">\n                <button onClick={sortByWarehouse1}>Sort by warehouse</button>\n                <button onClick={sortByDate1}>Sort by date</button>\n                <button className=\"clearFilters\" onClick={clearFilters}>\n                  Clear all filters\n                </button>\n              </div>\n              <div className=\"div-accordion\">\n                <Accordion title=\"Search by date\">\n                  <Datepicker\n                    value={searchDates}\n                    parentFunction={handleSearchDates}\n                    ref={ref}\n                  />\n                </Accordion>\n              </div>\n\n              {site1DetailedData && site1DetailedData.length ? (\n                <div>\n                  <div className=\"grid-list\">\n                    {\" \"}\n                    <div className=\"tabelHeader\">\n                      {renderTableHeader(site1DetailedData)}\n                    </div>\n                    {site1DetailedData.map((data, i) => (\n                      <div className=\"table-rows\" key={i}>\n                        <p className=\"tabel-item\"> {data.chemical}</p>\n                        <p className=\"tabel-item\"> {data.action}</p>\n                        <p className=\"tabel-item\"> {data.date}</p>\n                        <p className=\"tabel-item\"> {data.warehouse}</p>\n                        <p className=\"tabel-item\"> {data.ticket}</p>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ) : (\n                <p className=\"loading\">Loading...</p>\n              )}\n            </div>\n          )}\n        </Content>\n        <Content active={active === 1}>\n          {/* <h1>Content 2</h1> */}\n          {loading ? (\n            <p className=\"loading\">Loading...</p>\n          ) : (\n            <div className=\"total-container\">\n              <p className=\"total-desc\">\n                <strong>In total:</strong> <strong>A:</strong>\n                {site2DataTotal.A}\n                <strong> B: </strong> {site2DataTotal.B} <strong> C: </strong>{\" \"}\n                {site2DataTotal.C} <strong>Alert: </strong>{\" \"}\n                {site2DataTotal.alert}{\" \"}\n              </p>\n              <div className=\"button-container\">\n                <button onClick={sortByWarehouse2}>Sort by warehouse</button>\n                <button onClick={sortByDate2}>Sort by date</button>\n                <button className=\"clearFilters\" onClick={clearFilters}>\n                  Clear all filters\n                </button>\n              </div>\n              <div className=\"div-accordion\">\n                <Accordion title=\"Search by date\">\n                  <Datepicker\n                    value={searchDates}\n                    parentFunction={handleSearchDates}\n                    ref={ref}\n                  />\n                </Accordion>\n              </div>\n\n              {site2DetailedData && site2DetailedData.length ? (\n                <div>\n                  <div className=\"grid-list\">\n                    {\" \"}\n                    <div className=\"tabelHeader\">\n                      {renderTableHeader(site2DetailedData)}\n                    </div>\n                    {site2DetailedData.map((data, i) => (\n                      <div className=\"table-rows\" key={i}>\n                        <p className=\"tabel-item\"> {data.chemical}</p>\n                        <p className=\"tabel-item\"> {data.action}</p>\n                        <p className=\"tabel-item\"> {data.date}</p>\n                        <p className=\"tabel-item\"> {data.warehouse}</p>\n                        <p className=\"tabel-item\"> {data.ticket}</p>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ) : (\n                <p className=\"loading\">Loading...</p>\n              )}\n            </div>\n          )}\n        </Content>\n      </>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"../../css/aside.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\nimport Chemicals from \"../Chemicals\";\nimport StartPage from \"../StartPage\";\nimport Warehouses from \"../Warehouses\";\nimport Statistic from \"../Statistic\";\nimport Search from \"../Search\";\n\nexport default function Aside() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <nav className=\"aside\">\n          <ul>\n            <li>\n              <NavLink to=\"/\" exact={true} activeClassName=\"active\">\n                Start page\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/chemicals\" activeClassName=\"active\">\n                Chemicals\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/warehouses\" activeClassName=\"active\">\n                Warehouses\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/search\" activeClassName=\"active\">\n                Sites\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/statistics\" activeClassName=\"active\">\n                Audit tables\n              </NavLink>\n            </li>\n          </ul>\n        </nav>\n\n        <div className=\"content\">\n          <Switch>\n            <Route path=\"/chemicals\">\n              <Chemicals />\n            </Route>\n            <Route path=\"/warehouses\">\n              <Warehouses />\n            </Route>\n            <Route path=\"/search\">\n              <Search />\n            </Route>\n            <Route path=\"/statistics\">\n              <Statistic />\n            </Route>\n            <Route path=\"/\">\n              <StartPage />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport StartPage from \"./components/StartPage\";\nimport Header from \"./components/pageComponents/Header\";\nimport Aside from \"./components/pageComponents/Aside\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Aside />\n      {/* <StartPage /> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}